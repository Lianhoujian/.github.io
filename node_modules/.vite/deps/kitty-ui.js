import {
  Fragment,
  computed2 as computed,
  createBaseVNode,
  createBlock,
  createCommentVNode,
  createElementBlock,
  createTextVNode,
  createVNode,
  defineComponent,
  mergeProps,
  nextTick,
  normalizeClass,
  normalizeStyle,
  onMounted,
  openBlock,
  ref,
  renderList,
  renderSlot,
  resolveComponent,
  shallowRef,
  toDisplayString,
  unref,
  useAttrs,
  useSlots,
  vShow,
  watch,
  withDirectives
} from "./chunk-24SEBVKK.js";

// node_modules/kitty-ui/es/src/button/button.mjs
import "C:/Users/Admin/Desktop/lianl/node_modules/kitty-ui/es/src/button/style/index.css";

// node_modules/kitty-ui/es/src/button/types.mjs
var t = ["primary", "success", "info", "warning", "danger", "text"];
var i = ["midium", "small", "mini"];
var o = {
  type: {
    type: String,
    validator(n4) {
      return t.includes(n4);
    }
  },
  plain: Boolean,
  round: Boolean,
  disabled: Boolean,
  icon: String,
  iconPosition: String,
  size: {
    type: String,
    validator(n4) {
      return i.includes(n4);
    }
  }
};

// node_modules/kitty-ui/es/src/icon/icon.mjs
import "C:/Users/Admin/Desktop/lianl/node_modules/kitty-ui/es/src/icon/style/index.css";

// node_modules/kitty-ui/es/src/icon/types.mjs
var t2 = {
  name: {
    type: String
  },
  dot: {
    type: Boolean
  },
  badge: {
    type: String
  },
  color: {
    type: String
  }
};

// node_modules/kitty-ui/es/_virtual/plugin-vue_export-helper.mjs
var s = (t4, e2) => {
  const o3 = t4.__vccOpts || t4;
  for (const [r6, c3] of e2)
    o3[r6] = c3;
  return o3;
};

// node_modules/kitty-ui/es/src/icon/icon.mjs
var _ = defineComponent({
  name: "k-icon",
  props: t2,
  setup(o3) {
    onMounted(() => {
      import("./iconfont-KWBXV3AN.js");
    });
    const r6 = computed(() => `#kitty-${o3.name}`), i3 = computed(() => ({
      ["kitty-dot"]: o3.dot && !o3.badge
    })), c3 = computed(() => o3.badge), s4 = computed(() => ({
      color: o3.color
    }));
    return {
      iconName: r6,
      styleDot: i3,
      badge: c3,
      iconColor: s4
    };
  }
});
var g = { class: "kitty-icon" };
var h = ["xlink:href"];
function C(o3, r6, i3, c3, s4, $) {
  return openBlock(), createElementBlock("div", g, [
    (openBlock(), createElementBlock("svg", {
      class: "icon",
      style: normalizeStyle(o3.iconColor),
      "aria-hidden": "true"
    }, [
      createBaseVNode("use", { "xlink:href": o3.iconName }, null, 8, h)
    ], 4)),
    o3.dot ? (openBlock(), createElementBlock("div", {
      key: 0,
      class: normalizeClass(["kitty-info", o3.styleDot])
    }, toDisplayString(o3.badge), 3)) : createCommentVNode("", true)
  ]);
}
var z = s(_, [["render", C]]);

// node_modules/kitty-ui/es/src/button/button.mjs
var C2 = defineComponent({
  name: "k-button",
  props: o,
  components: { Icon: z },
  setup(o3) {
    const e2 = computed(() => ({
      [`k-button--${o3.type}`]: o3.type,
      "is-plain": o3.plain,
      "is-round": o3.round,
      "is-disabled": o3.disabled,
      [`k-button--${o3.size}`]: o3.size
    })), s4 = computed(() => {
      const c3 = o3.icon, a4 = o3.iconPosition;
      return {
        iconName: c3,
        position: a4
      };
    }), i3 = useSlots();
    return {
      styleClass: e2,
      Icon: z,
      iconFont: s4,
      slots: i3
    };
  }
});
var N = {
  key: 1,
  class: "k-button-text"
};
function h2(o3, e2, s4, i3, c3, a4) {
  const r6 = resolveComponent("Icon");
  return openBlock(), createElementBlock("button", {
    class: normalizeClass(["k-button", o3.styleClass])
  }, [
    o3.iconFont.iconName && o3.iconFont.position != "right" ? (openBlock(), createBlock(r6, {
      key: 0,
      name: o3.iconFont.iconName
    }, null, 8, ["name"])) : createCommentVNode("", true),
    o3.slots.default ? (openBlock(), createElementBlock("span", N, [
      renderSlot(o3.$slots, "default")
    ])) : createCommentVNode("", true),
    o3.iconFont.position == "right" && o3.iconFont.iconName ? (openBlock(), createBlock(r6, {
      key: 2,
      name: o3.iconFont.iconName
    }, null, 8, ["name"])) : createCommentVNode("", true)
  ], 2);
}
var P = s(C2, [["render", h2]]);

// node_modules/@kitty-ui/utils/dist/es/withinstall/index.js
var a = (n4) => (n4.install = (e2) => {
  const t4 = n4.name || n4.__name;
  e2.component(t4, n4);
}, n4);

// node_modules/@kitty-ui/utils/dist/es/dataType/index.js
var o2 = {};
var c = Object.getPrototypeOf;
var a2 = o2.toString;
var n = o2.hasOwnProperty;
var l = n.toString;
var i2 = l.call(Object);
var s2 = (e2) => {
  let t4, r6;
  return !e2 || a2.call(e2) !== "[object Object]" ? false : (t4 = c(e2), t4 ? (r6 = n.call(t4, "constructor") && t4.constructor, typeof r6 == "function" && l.call(r6) === i2) : true);
};

// node_modules/kitty-ui/es/src/button/index.mjs
var n2 = a(P);

// node_modules/kitty-ui/es/src/icon/index.mjs
var n3 = a(z);

// node_modules/kitty-ui/es/src/link/link.mjs
import "C:/Users/Admin/Desktop/lianl/node_modules/kitty-ui/es/src/link/style/index.css";

// node_modules/kitty-ui/es/src/link/types.mjs
var e = ["primary", "success", "info", "warning", "danger"];
var r = {
  type: {
    type: String,
    validator(n4) {
      return e.includes(n4);
    }
  },
  disabled: Boolean,
  underline: Boolean
};

// node_modules/kitty-ui/es/src/link/link.mjs
var m = defineComponent({
  name: "k-link",
  props: r,
  setup(e2) {
    const t4 = useAttrs(), s4 = computed(() => ({
      [`k-link--${e2.type}`]: e2.type,
      "is-disabled": e2.disabled,
      "is-underline": e2.underline
    }));
    return {
      attrs: t4,
      styleClass: s4
    };
  }
});
function u(e2, t4, s4, f2, k2, $) {
  return openBlock(), createElementBlock("a", mergeProps(e2.attrs, {
    class: ["k-link", e2.styleClass]
  }), [
    renderSlot(e2.$slots, "default")
  ], 16);
}
var B = s(m, [["render", u]]);

// node_modules/kitty-ui/es/src/link/index.mjs
var l2 = a(B);

// node_modules/kitty-ui/es/src/upload/upload.mjs
import "C:/Users/Admin/Desktop/lianl/node_modules/kitty-ui/es/src/upload/style/index.css";

// node_modules/kitty-ui/es/src/upload/dragger.mjs
import "C:/Users/Admin/Desktop/lianl/node_modules/kitty-ui/es/src/upload/style/drag.css";
var k = { class: "k-upload-content" };
var E = createBaseVNode("div", { class: "k-upload-dragger-text" }, [
  createTextVNode("\u5C06\u6587\u4EF6\u62D6\u5230\u6B64\u5904\u6216"),
  createBaseVNode("em", null, "\u70B9\u51FB\u4E0A\u4F20")
], -1);
var C3 = defineComponent({
  __name: "dragger",
  emits: ["getFilesList", "fileUpload"],
  setup(B2, { emit: n4 }) {
    const o3 = ref(), l3 = ref(false), a4 = ref(null), u3 = ref([]);
    onMounted(() => {
      o3.value.addEventListener("drop", (e2) => {
        e2.preventDefault(), u3.value.push(...Array.from(e2.dataTransfer.files)), n4("getFilesList", u3.value);
      }, false), o3.value.addEventListener("dragover", i3, false);
    });
    const i3 = (e2) => {
      l3.value = true, a4.value !== null && clearTimeout(a4.value), a4.value = window.setTimeout(() => {
        l3.value = false, a4.value = null;
      }, 100), e2.stopPropagation(), e2.preventDefault();
    };
    return (e2, s4) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(["k-upload-dragger", { ["k-upload-draggerenter"]: l3.value }]),
      ref_key: "fileArea",
      ref: o3,
      onClick: s4[0] || (s4[0] = (F) => n4("fileUpload"))
    }, [
      createBaseVNode("div", k, [
        createVNode(z, {
          class: "k-upload-icon",
          name: l3.value ? "file-open" : "folder-close"
        }, null, 8, ["name"]),
        E
      ])
    ], 2));
  }
});

// node_modules/kitty-ui/es/src/upload/upload.mjs
var b = { class: "k-upload" };
var w = ["multiple", "accept"];
var D = { class: "k-upload-list" };
var E2 = { class: "k-upload-list_item-name" };
var N2 = { class: "k-upload-list_item-status-label" };
var U = defineComponent({
  name: "k-upload"
});
var x = defineComponent({
  ...U,
  props: {
    multiple: { type: Boolean },
    accept: null,
    drag: { type: Boolean }
  },
  emits: ["getFilesList"],
  setup(m3, { emit: o3 }) {
    const a4 = m3, c3 = ref(), t4 = ref([]), r6 = () => {
      c3.value.click();
    }, _2 = (e2) => {
      const n4 = e2.target.files;
      !n4 || (t4.value.push(...Array.from(n4)), o3("getFilesList", t4.value));
    }, f2 = (e2) => {
      t4.value.splice(e2, 1), o3("getFilesList", t4.value);
    }, k2 = (e2) => {
      t4.value = e2, o3("getFilesList", e2);
    };
    return (e2, n4) => (openBlock(), createElementBlock("div", b, [
      withDirectives(createBaseVNode("input", {
        type: "file",
        multiple: a4.multiple,
        accept: a4.accept,
        ref_key: "kIpt",
        ref: c3,
        onChange: _2
      }, null, 40, w), [
        [vShow, false]
      ]),
      a4.drag ? (openBlock(), createBlock(C3, {
        key: 1,
        onGetFilesList: k2,
        onFileUpload: r6
      })) : (openBlock(), createElementBlock("div", {
        key: 0,
        onClick: r6
      }, [
        renderSlot(e2.$slots, "default")
      ])),
      createBaseVNode("div", D, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(t4.value, (v, p) => (openBlock(), createElementBlock("div", {
          class: "k-upload-list_item",
          key: p
        }, [
          createBaseVNode("div", E2, toDisplayString(v.name), 1),
          createBaseVNode("div", N2, [
            createVNode(z, {
              name: "ashbin",
              onClick: (V) => f2(p)
            }, null, 8, ["onClick"])
          ])
        ]))), 128))
      ])
    ]));
  }
});

// node_modules/kitty-ui/es/src/upload/index.mjs
var r2 = a(x);

// node_modules/kitty-ui/es/src/shake/shake.mjs
import "C:/Users/Admin/Desktop/lianl/node_modules/kitty-ui/es/src/shake/style/index.css";
var r3 = defineComponent({
  name: "k-shake"
});
var f = defineComponent({
  ...r3,
  props: {
    modelValue: { type: Boolean, default: false }
  },
  emits: ["update:modelValue"],
  setup(l3, { emit: o3 }) {
    const t4 = l3;
    return watch(() => t4.modelValue, (e2) => {
      e2 && setTimeout(() => {
        o3("update:modelValue", false);
      }, 1e3);
    }, { immediate: true }), (e2, i3) => (openBlock(), createElementBlock("div", {
      class: normalizeClass(["k-shake", { ["k-shakeactive"]: t4.modelValue }])
    }, [
      renderSlot(e2.$slots, "default")
    ], 2));
  }
});

// node_modules/kitty-ui/es/src/shake/index.mjs
var r4 = a(f);

// node_modules/kitty-ui/es/src/input/input.mjs
import "C:/Users/Admin/Desktop/lianl/node_modules/kitty-ui/es/src/input/style/index.css";

// node_modules/kitty-ui/es/src/input/utils.mjs
var b2 = (r6) => typeof r6 == "number";
var t3;
var c2 = `
  height:0 !important;
  visibility:hidden !important;
  overflow:hidden !important;
  position:absolute !important;
  z-index:-1000 !important;
  top:0 !important;
  right:0 !important;
`;
var u2 = [
  "letter-spacing",
  "line-height",
  "padding-top",
  "padding-bottom",
  "font-family",
  "font-weight",
  "font-size",
  "text-rendering",
  "text-transform",
  "width",
  "text-indent",
  "padding-left",
  "padding-right",
  "border-width",
  "box-sizing"
];
function m2(r6) {
  const e2 = window.getComputedStyle(r6), l3 = e2.getPropertyValue("box-sizing"), n4 = Number.parseFloat(e2.getPropertyValue("padding-bottom")) + Number.parseFloat(e2.getPropertyValue("padding-top")), a4 = Number.parseFloat(e2.getPropertyValue("border-bottom-width")) + Number.parseFloat(e2.getPropertyValue("border-top-width"));
  return { contextStyle: u2.map(
    (p) => `${p}:${e2.getPropertyValue(p)}`
  ).join(";"), paddingSize: n4, borderSize: a4, boxSizing: l3 };
}
function x2(r6, e2 = 1, l3) {
  var s4;
  t3 || (t3 = document.createElement("textarea"), document.body.appendChild(t3));
  const { paddingSize: n4, borderSize: a4, boxSizing: d, contextStyle: p } = m2(r6);
  t3.setAttribute("style", `${p};${c2}`), t3.value = r6.value || r6.placeholder || "";
  let o3 = t3.scrollHeight;
  const g2 = {};
  d === "border-box" ? o3 = o3 + a4 : d === "content-box" && (o3 = o3 - n4), t3.value = "";
  const h3 = t3.scrollHeight - n4;
  if (b2(e2)) {
    let i3 = h3 * e2;
    d === "border-box" && (i3 = i3 + n4 + a4), o3 = Math.max(i3, o3), g2.minHeight = `${i3}px`;
  }
  if (b2(l3)) {
    let i3 = h3 * l3;
    d === "border-box" && (i3 = i3 + n4 + a4), o3 = Math.min(i3, o3);
  }
  return g2.height = `${o3}px`, (s4 = t3.parentNode) == null || s4.removeChild(t3), t3 = void 0, g2;
}

// node_modules/kitty-ui/es/src/input/input.mjs
var G = {
  key: 0,
  class: "k-textarea"
};
var J = ["value"];
var K = {
  key: 0,
  class: "k-input__prepend"
};
var L = ["disabled", "value"];
var Q = {
  key: 1,
  class: "k-input__append"
};
var U2 = { class: "k-input__suffix" };
var W = {
  key: 3,
  class: "k-input__prefix"
};
var X = {
  key: 4,
  class: "k-input__suffix no-cursor"
};
var Y = defineComponent({
  name: "k-input"
});
var oe = defineComponent({
  ...Y,
  props: {
    modelValue: { default: "" },
    disabled: { type: Boolean },
    size: null,
    clearable: { type: Boolean },
    showPassword: { type: Boolean },
    prefixIcon: null,
    suffixIcon: null,
    autosize: { type: [Boolean, Object] }
  },
  emits: ["update:modelValue", "change"],
  setup(C4, { emit: m3 }) {
    const e2 = C4, v = ref(false), x3 = (s4) => {
      s4.target.value ? v.value = true : v.value = false, m3("change", s4.target.value), m3("update:modelValue", s4.target.value);
    }, l3 = useAttrs(), B2 = computed(() => ({
      "is-disabled": e2.disabled,
      [`k-input--${e2.size}`]: e2.size,
      ["k-input-group k-input-prepend"]: c3.prepend,
      ["k-input-group k-input-append"]: c3.append
    })), R = computed(() => ({
      ["k-input--prefix"]: w2.value
    })), _2 = ref(true), $ = () => {
      m3("update:modelValue", "");
    }, r6 = ref();
    Promise.resolve().then(() => {
      e2.showPassword && (r6.value.type = "password");
    });
    const k2 = ref("browse"), N3 = computed(() => e2.showPassword && e2.modelValue && !e2.clearable), T = () => {
      if (r6.value.type === "password") {
        k2.value = "eye-close", r6.value.type = l3.type || "text";
        return;
      }
      r6.value.type = "password", k2.value = "browse";
    }, j = computed(() => e2.suffixIcon && !e2.clearable && !e2.showPassword), w2 = computed(() => e2.prefixIcon), h3 = ref(), b3 = shallowRef();
    watch(() => e2.modelValue, () => {
      if (l3.type === "textarea" && e2.autosize) {
        const s4 = s2(e2.autosize) ? e2.autosize.minRows : void 0, n4 = s2(e2.autosize) ? e2.autosize.maxRows : void 0;
        nextTick(() => {
          h3.value = x2(b3.value, s4, n4);
        });
      }
    }, { immediate: true });
    const c3 = useSlots();
    return (s4, n4) => unref(l3).type === "textarea" ? (openBlock(), createElementBlock("div", G, [
      createBaseVNode("textarea", mergeProps({
        class: "k-textarea__inner",
        style: h3.value
      }, unref(l3), {
        ref_key: "textarea",
        ref: b3,
        value: e2.modelValue,
        onInput: x3
      }), null, 16, J)
    ])) : (openBlock(), createElementBlock("div", {
      key: 1,
      class: normalizeClass(["k-input", unref(B2)]),
      onMouseenter: n4[0] || (n4[0] = (A) => _2.value = true),
      onMouseleave: n4[1] || (n4[1] = (A) => _2.value = false)
    }, [
      unref(c3).prepend ? (openBlock(), createElementBlock("div", K, [
        renderSlot(s4.$slots, "prepend")
      ])) : createCommentVNode("", true),
      createBaseVNode("input", mergeProps({
        ref_key: "ipt",
        ref: r6,
        class: ["k-input__inner", unref(R)],
        disabled: e2.disabled
      }, unref(l3), {
        value: e2.modelValue,
        onInput: x3
      }), null, 16, L),
      unref(c3).append ? (openBlock(), createElementBlock("div", Q, [
        renderSlot(s4.$slots, "append")
      ])) : createCommentVNode("", true),
      e2.clearable && v.value ? withDirectives((openBlock(), createElementBlock("div", {
        key: 2,
        onClick: $,
        class: "k-input__suffix"
      }, [
        createVNode(unref(n3), { name: "error" })
      ], 512)), [
        [vShow, _2.value]
      ]) : createCommentVNode("", true),
      withDirectives(createBaseVNode("div", U2, [
        createVNode(unref(n3), {
          onClick: T,
          name: k2.value
        }, null, 8, ["name"])
      ], 512), [
        [vShow, unref(N3)]
      ]),
      unref(w2) ? (openBlock(), createElementBlock("div", W, [
        createVNode(unref(n3), {
          name: e2.prefixIcon
        }, null, 8, ["name"])
      ])) : createCommentVNode("", true),
      unref(j) ? (openBlock(), createElementBlock("div", X, [
        createVNode(unref(n3), {
          name: e2.suffixIcon
        }, null, 8, ["name"])
      ])) : createCommentVNode("", true)
    ], 34));
  }
});

// node_modules/kitty-ui/es/src/input/index.mjs
var a3 = a(oe);

// node_modules/kitty-ui/es/src/index.mjs
var s3 = [n2, n3, l2, r2, r4, a3];

// node_modules/kitty-ui/es/index.mjs
var r5 = {
  install: (o3) => {
    s3.forEach((t4) => o3.use(t4));
  }
};
export {
  n2 as Button,
  n3 as Icon,
  a3 as Input,
  l2 as Link,
  r4 as Shake,
  r2 as Upload,
  r5 as default
};
//# sourceMappingURL=kitty-ui.js.map
